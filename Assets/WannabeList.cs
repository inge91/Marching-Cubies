//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
namespace AssemblyCSharp
{
	public class WannabeList <T>
	{
		T[] arr;
		int counter;
		public WannabeList (int maxSize)
		{
			arr = new T[maxSize];
			counter = 0;
		}

		public void Add(T element)
		{
			arr[counter++] = element;
		}

		public void Clear()
		{
			counter = 0;
		}

		public int Count
		{
			get{ return counter; }
 		}

		public int MaxSize
		{
			get{ return arr.Length; }
		}

		public void IncrementIndex()
		{
			counter++;
		}

		public void CopyFrom(WannabeList<T> toCopyFrom)
		{
			toCopyFrom.arr.CopyTo (arr, 0);
			counter = toCopyFrom.counter;
		}

		public void CopyFrom(T[] toCopyFrom)
		{
			toCopyFrom.CopyTo (arr, 0);
			counter = toCopyFrom.Length;
		}

		public T this[int index]
		{
			get{ return arr[index]; }
		}

	}
}

